if (!self.define) { const e = e => { "require" !== e && (e += ".js"); let r = Promise.resolve(); return s[e] || (r = new Promise(async r => { if ("document" in self) { const s = document.createElement("script"); s.src = e, document.head.appendChild(s), s.onload = r } else importScripts(e), r() })), r.then(() => { if (!s[e]) throw new Error(`Module ${e} didnâ€™t register its module`); return s[e] }) }, r = (r, s) => { Promise.all(r.map(e)).then(e => s(1 === e.length ? e[0] : e)) }, s = { require: Promise.resolve(r) }; self.define = (r, i, n) => { s[r] || (s[r] = Promise.resolve().then(() => { let s = {}; const a = { uri: location.origin + r.slice(1) }; return Promise.all(i.map(r => { switch (r) { case "exports": return s; case "module": return a; default: return e(r) } })).then(e => { const r = n(...e); return s.default || (s.default = r), s }) })) } } define("./sw.js", ["./workbox-709eee39"], (function (e) { "use strict"; e.skipWaiting(), e.clientsClaim(), e.precacheAndRoute([{ url: "build/404-434fdeb5.js", revision: "64eed95beeea6dc3a760b214510566aa" }, { url: "build/bundle.css", revision: "5cee80441dc869fa034ed8e2e6d720cd" }, { url: "build/external.css", revision: "6a21b011d2561f1f0d6728f0368a7d1b" }, { url: "build/main-7744332d.js", revision: "b940e8b41565c15276757b6d3c7f4c14" }, { url: "build/main.js", revision: "a6e15dd21fd6c798458e569311c9f6ba" }, { url: "build/planet-site-99bb44b9.js", revision: "96092df9bac59cb0619c975e1ba8b13d" }, { url: "build/ribbon-fa88699a.js", revision: "c55ba8acf5b0fde6866b0fc141adb08b" }, { url: "build/splash-screen-98ec6ee0.js", revision: "afc519387b13e1d0eaa38bc5b3a69d16" }, { url: "build/user-modal-5e25b3a3.js", revision: "15be45640d4fbe4010b58de6a57f528a" }, { url: "global.css", revision: "1547805030b7a3be13c845f22fa5694a" }, { url: "index.html", revision: "5c8863192bc5ae03f30a10657c3fb345" }], {}), e.registerRoute(/\.(?:png|svg|webp)$/, new e.CacheFirst({ cacheName: "assets", plugins: [new e.ExpirationPlugin({ maxEntries: 20, purgeOnQuotaError: !0 })] }), "GET"), e.registerRoute(/\.(?:json)$/, new e.NetworkFirst({ cacheName: "configs", plugins: [new e.ExpirationPlugin({ maxEntries: 5, purgeOnQuotaError: !0 })] }), "GET") }));
